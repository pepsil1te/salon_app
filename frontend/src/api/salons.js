import { ApiClient } from './ApiClient';

// API-–∫–ª–∏–µ–Ω—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–∞–ª–æ–Ω–∞–º–∏
class SalonApiClient extends ApiClient {
  constructor() {
    super('/salons', '—Å–∞–ª–æ–Ω');
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å–∞–ª–æ–Ω–∞
   * @param {number} id ID —Å–∞–ª–æ–Ω–∞
   * @param {string} startDate –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ (YYYY-MM-DD)
   * @param {string} endDate –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è (YYYY-MM-DD)
   * @returns {Promise<Object>} –û–±—ä–µ–∫—Ç —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
   */
  async getStatistics(id, startDate, endDate) {
    try {
      console.log(`üîç –ó–∞–ø—Ä–æ—Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–ª—è —Å–∞–ª–æ–Ω–∞ #${id} (${startDate} - ${endDate})`);
      
      const response = await this.api.get(`${this.basePath}/${id}/statistics`, {
        params: { startDate, endDate },
      });
      
      console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è —Å–∞–ª–æ–Ω–∞ #${id}:`, response.data);
      return response.data;
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–ª—è —Å–∞–ª–æ–Ω–∞ #${id}:`, error);
      console.error('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error.response?.data || error.message);
      throw error;
    }
  }

  /**
   * –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å–∞–ª–æ–Ω–æ–≤
   * @returns {Promise<Array>} –ú–∞—Å—Å–∏–≤ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ —Å–∞–ª–æ–Ω–æ–≤
   */
  async forceRefresh() {
    return this.getAll({}, true);
  }
}

export const salonApi = new SalonApiClient(); 